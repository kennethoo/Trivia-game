{"version":3,"sources":["socketconf.js","component/connect.js","page/home.js","component/chat.js","question.js","component/coutDown.js","component/leaderboard.js","page/join.js","page/create.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["socket","io","transports","upgrade","autoConnect","ConnectCom","state","click","username","usernameOneState","usernameTwo","usernameTwoState","roomId","roomIdState","messageRoom","createARoom","length","setState","beginConnection","auth","connect","reatimeConetion","emit","joinGame","joinRoom","on","room","props","loginAthification","connected","history","push","handleChange","e","target","name","value","trim","componentDidMount","off","className","htmlFor","onChange","this","type","placeholder","onClick","Component","dispatch","data","withRouter","Home","id","users","user","Chat","chat","message","realTimeMessage","console","log","messages","document","querySelector","scrollTop","scrollHeight","addMessage","textContent","sendMessage","innerHTML","componentWillUnmount","open","openChat","map","item","index","contentEditable","suppressContentEditableWarning","onKeyUp","question","choiceOne","choiceTwo","choiceThree","choicefour","awnser","timer","CountDown","time","setTimeout","setInterval","clearInterval","render","displayCount","Leaderboard","leaderboard","leadBoard","score","realTimeLeaderboardState","Join","currentUser","game","start","currentCount","correctAwnser","liveCounter","check","currentQuestion","currentScore","begin","leadB","realTime","startTheGame","Math","max","buildCounter","duration","minutes","seconds","parseInt","checkAwnser","curentScore","moveNext","callTheGame","showLeaderBoard","currentLeaderBoard","key","sort","a","b","displayLeaderboad","handleClick","style","width","Create","playTheGame","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","action","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec87dda4.chunk.js","sourcesContent":["import {io} from \"socket.io-client\";\nlet network=\"https://triviarel.herokuapp.com/\"\nconst socket = io(network,{transports: ['websocket'], upgrade: false ,autoConnect: false})\nexport default socket;","import React,{Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport socket from \"../socketconf\";\nclass ConnectCom extends Component{\n    state={\n        click:false,\nusername:\"\",\nusernameOneState:false,\nusernameTwo:\"\",\nusernameTwoState:false,\nroomId:\"\",\nroomIdState:false,\nmessageRoom:\"\"\n    }\n\n    createARoom=()=>{\n        if(this.state.username.length>2){\n            this.setState({\n                usernameOneState:false \n            })\n            this.beginConnection()\n        }else{\n            this.setState({\n                usernameOneState:true \n            })\n        }\n    }\n    beginConnection=()=>{\n        let username=this.state.username\n        socket.auth = {username};\n        socket.connect()\n        this.reatimeConetion()\n        socket.emit(\"create-game\",this.state.username)\n    }\njoinGame=()=>{\nif(this.state.username.length>2){\n    this.setState({\n        usernameTwoState:false \n    })\n}else{\n    this.setState({\n        usernameTwoState:true \n    }) \n}\n\nif(this.state.roomId.length>0){\n    this.setState({\n        roomIdState:false ,\n        messageRoom:\"\"\n    })\n}else{\n    this.setState({\n        roomIdState:true ,\n        messageRoom:\"Room is empty\"\n    })\n}\n\nif(this.state.username.length>2&& this.state.roomId.length>0){\n    this.joinRoom()\n}\n}\njoinRoom=()=>{\n    if(this.state.click===false){\n        let username=this.state.username\n        socket.auth = {username};\n        socket.connect()\n        this.reatimeConetion()\n        this.setState({\n            click:true\n        })\n    }\n    socket.emit(\"join-game\",this.state.roomId)\n}\n\n\n    reatimeConetion=()=>{\n        socket.on(\"connected-succed-join\",((room)=>{\n            this.props.loginAthification({ connected:true,room:room,username:this.state.username})\n            this.props.history.push(\"/joingame\")\n        }))\n        socket.on(\"connected-succed\",((room)=>{\n            this.props.loginAthification({connected:true,room:room,username:this.state.username})\n            this.props.history.push(\"/creategame\")\n        }))\n        socket.on(\"join-connect-error\",()=>{\n            this.setState({\n                roomIdState:true,\n                messageRoom:\"Room does not exist\"\n            })\n        })\n    }\n    handleChange=(e)=>{\nif(e.target.name===\"usernameOne\"){\nthis.setState({\n    username:e.target.value.trim()\n})\n}\nif(e.target.name===\"roomId\"){\n    this.setState({\n        roomId:e.target.value.trim()\n    })\n    }\n    }\n \n    componentDidMount=()=>{\n        socket.off(\"connected-succed\")\n    }\n    render(){\n        return(\n            <div className=\"box-prsent-game\">\n                <div className=\"titk\">\n                 CS Trivia\n                </div>\n                <div className=\"create-game\">\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Username</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"usernameOne\" placeholder=\"John Doe\"  />\n\t\t\t  </div>\n              {this.state.usernameOneState?<div  className=\"message-password\">Username minimum length is 3</div>:\"\"}\n             \n                   <button className=\"butttin-action\" onClick={this.createARoom}>Create</button>\n                </div>\n                <div className=\"hold--tr\">\n                    <div className=\"bar\"></div>\n                    <p>Or</p>\n                    <div className=\"bar\"></div>\n                </div>\n                <div className=\"join-a-party\">\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Username</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"usernameOne\" placeholder=\"John Doe\"  />\n\t\t\t  </div>\n              {this.state.usernameTwoState?<div  className=\"message-password\">Username minimum length is 3</div>:\"\"}\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Join a party</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"roomId\" placeholder=\"#code..\"  />\n\t\t\t  </div>\n              {this.state.roomIdState?<div  className=\"message-password\">{this.state.messageRoom}</div>:\"\"}\n                </div>\n                <button onClick={this.joinGame} className=\"butttin-action\" >JOin</button>\n            </div>\n        )\n    }\n}   \n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n      loginAthification:(data)=>{\n        dispatch({ type:\"JOIN\", data:data})\n      },\n      \n    }\n      }\n      const mapstateToProps=(state)=>{\n        return{\n            connected:state.connected\n        }\n        }\n        \nexport default connect(mapstateToProps,mapDispatchToProps) (withRouter(ConnectCom))","\nimport React,{Component} from \"react\"\nimport ConnectCom from \"../component/connect\"\nimport {withRouter }from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nclass  Home extends Component {\nconstructor(props){\nsuper(props)\nthis.state={\n}\n}\n  render(){\n  return (\n    <div className={`homne-page `}>\n<div id=\"containerrr\">\n<ConnectCom/>\n\t</div>\n    </div>\n  );\n  }\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    loginAthification:(data)=>{\n      dispatch({ type:\"JOIN\", data:data})\n    },\n    \n  }\n    }\n    const mapstateToProps=(state)=>{\n      return{\n          users:state.user,\n      }\n      }\nexport default connect(mapstateToProps,mapDispatchToProps) (withRouter(Home))\n","import React,{Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport { IoCloseSharp ,IoSendSharp} from \"react-icons/io5\";\nimport {connect} from \"react-redux\"\nimport socket from \"../socketconf\";\nclass Chat extends Component {\n    state={\nchat:[],\nmessage:\"\"\n    }\n\n    realTimeMessage=()=>{\nsocket.on(\"new-meesage\",(data)=>{\n    console.log(data)\n    let messages= this.state.chat\n    messages.push(data)\n    this.setState({\n        chat:messages\n    },()=>{\n        document.querySelector(\"#chat-content\").scrollTop = document.querySelector(\"#chat-content\").scrollHeight\n    })\n})\n    }\n    addMessage=(e)=>{\nthis.setState({\n    message:e.target.textContent\n})\n    }\n    sendMessage=()=>{\n        if(this.state.message.length>0){\n        socket.emit(\"message\",{room:this.props.roomId,message:this.state.message,name:this.props.username})\n        this.setState({\n            message:\"\"\n        })\n        document.querySelector(\".hold-message\").innerHTML=\"\"\n        }\n\n    }\n    componentWillUnmount=()=>{\n        socket.off(\"new-meesage\")\n    }\n    componentDidMount=()=>{\n        this.realTimeMessage()\n        this.setState({\n            message:`${this.props.username} just join`\n        },()=>{\n            this.sendMessage()\n        })\n\n    }\n    render(){\n        return (\n            <div className={`char0-box-class ${this.props.open?\"active\":\"\"}`}>\n            <div id=\"chat-box\">\n             <div id=\"head-chat\">\n        <button onClick={()=>{this.props.openChat(!this.props.open)}} className=\"close-chat\">\n      <IoCloseSharp/>\n       </button>\n       <p>CHAT ROOM</p>\n        </div>\n       <div id=\"chat-content\">  \n       {this.state.chat?.map((item,index)=>{\n           return(\n            <div key={index} className=\"char-room-box\">\n           {/*<div className=\"icon\"></div>*/}\n           <div className=\"wraprtt\">\n               <div className=\"name-people\"> {item.name}</div>\n               <div className=\"conversationt\"> \n               {item.message}\n               </div>\n           </div>\n       </div>\n           )\n       })}\n     \n       </div> \n       <div className=\"type-message-box\">\n\t\t\t\t<div className=\"watpr-contnr-mem\">\n\t\t\t\t\t<div className=\"wrappe-mmeshe\">\n\t\t\t\t\t<div contentEditable=\"true\"   suppressContentEditableWarning={true} onKeyUp={this.addMessage} data-placeholder=\"Type a message...\" className=\"hold-message noped\"></div>\n                    <div className=\"send-hold fnjjrjr\"><button onClick={this.sendMessage} ><IoSendSharp/></button></div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n            </div>\n        \n            </div>\n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n      loginAthification:(data)=>{\n        dispatch({ type:\"JOIN\", data:data})\n      },\n      \n    }\n      }\n      const mapstateToProps=(state)=>{\n        return{\n            connected:state.connected,\n            username:state.username,\n            roomId:state.roomId\n        }\n        }\n    export default  connect(mapstateToProps,mapDispatchToProps) (withRouter(Chat))"," let question =[\n     {question:\"Prefix notation is alsow known as\",\n     choiceOne:\"Reverse Polish Notation\",\n     choiceTwo:\"Reverse Notation\",\n     choiceThree:\"Polish Reverse Notation\",\n     choicefour:\"Polish Notation\",\n     awnser:\"4\"\n    },\n    {question:\"What data structure is used for breadth first traversal of a graph?\",\n    choiceOne:\"queue\",\n    choiceTwo:\"stack\",\n    choiceThree:\"list\",\n    choicefour:\"none of the above\",\n    awnser:\"1\"\n   },\n   {question:\"Find the odd out\",\n   choiceOne:\" Prim's Minimal Spanning Tree Algorithm\",\n   choiceTwo:\"Kruskal's Minimal Spanning Tree Algorithm\",\n   choiceThree:\"Floyd-Warshall's All pair shortest path Algorithm\",\n   choicefour:\"Dijkstra's Minimal Spanning Tree Algorithm\",\n   awnser:\"3\"\n  },\n  {question:\"Which of the following algorithm is not stable?\",\n  choiceOne:\"Bubble Sort\",\n  choiceTwo:\"Quick Sort\",\n  choiceThree:\"Merge Sort\",\n  choicefour:\"Insertion Sort\",\n  awnser:\"2\"\n },\n {question:\"After each iteration in bubble sort\",\n choiceOne:\"at least one element is at its sorted position.\",\n choiceTwo:\"one less comparison is made in the next iteration.\",\n choiceThree:\"Both A & B are true.\",\n choicefour:\"Neither A or B are true.\",\n awnser:\"1\"\n},\n{\nquestion:\"Linked list search complexity is\",\nchoiceOne:\"Ο(1)\",\nchoiceTwo:\"Ο(n)\",\nchoiceThree:\" Ο(log n)\",\nchoicefour:\"Ο(log log n)\",\nawnser:\"2\"\n},\n{question:\"Program with highest run-time complexity is\",\nchoiceOne:\" Tower of Hanoi\",\nchoiceTwo:\"Fibonacci Series\",\nchoiceThree:\"Prime Number Series\",\nchoicefour:\"None of the above\",\nawnser:\"1\"\n}, \n{question:\"The following sorting algorithms maintain two sub-lists, one sorted and one to be sorted\",\nchoiceOne:\"Selection Sort\",\nchoiceTwo:\"Insertion Sort\",\nchoiceThree:\"Merge Sort\",\nchoicefour:\"both A &am; B\",\nawnser:\"4\"\n},\n{question:\"In conversion from prefix to postfix using stack data-structure, if operators and operands are pushed and popped exactly once, then the run-time complexity is\",\nchoiceOne:\"Ο(1)\",\nchoiceTwo:\"Ο(n)\",\nchoiceThree:\"Ο(log n)\",\nchoicefour:\"Ο(n2)\",\nawnser:\"2\"\n},\n{question:\"Which of the following data structures falls under the category of a 'dictionary'?\",\nchoiceOne:\"Hash table\",\nchoiceTwo:\"Hash\",\nchoiceThree:\"Tree\",\nchoicefour:\"Linked list\",\nawnser:\"1\"\n},\n{question:\"When using a heap, which function will give you the parent of the entry with index i?\",\nchoiceOne:\"Decimal division, i / 2\",\nchoiceTwo:\"Integer division, i / 2\",\nchoiceThree:\"Multiplication, i * 2\",\nchoicefour:\"Multiplication, i * 2 + 1\",\nawnser:\"2\"\n},\n{question:\"A vector (an indexed, growable list) would most likely be implemented on top of which of these structures?\",\nchoiceOne:\"Hash table\",\nchoiceTwo:\"Stack\",\nchoiceThree:\"Tree\",\nchoicefour:\"Linked list\",\nawnser:\"4\"\n},\n{question:\"If you have an empty stack that can contain letters, and you push (in order) these letters onto it, what order will they be in when you pop them off? 't' 'a' 'p'\",\nchoiceOne:\"t' 'a' 'p'\",\nchoiceTwo:\"'p' 'a' 't'\",\nchoiceThree:\"'a' 'p' 't'\",\nchoicefour:\"There is no way to tell\",\nawnser:\"2\"\n},\n{question:\"If you have a empty queue that can contain letters, and you enqueue (in order) these letters into it, what order will they be in when you dequeue them? 'm' 'a' 'r'\",\nchoiceOne:\" 'r' 'a' 'm'\",\nchoiceTwo:\"'m' 'a' 'r'\",\nchoiceThree:\"'a' 'r' 'm'\",\nchoicefour:\"There is no way to tell\",\nawnser:\"2\"\n},\n{question:\"Which of the following could best be described by the graph structure?\",\nchoiceOne:\"Roads connecting cities\",\nchoiceTwo:\"A GUI (Graphical User Interface)\",\nchoiceThree:\" Algebraic problems\",\nchoicefour:\" Given a word, finding its definition\",\nawnser:\"1\"\n},\n{question:\"If you have a sorted, balanced binary tree with 15 elements in it, how many steps, maximum, will it take you to decide whether an element is present in the tree?\",\nchoiceOne:\"Three\",\nchoiceTwo:\"Depends on the computer\",\nchoiceThree:\"Fifteen\",\nchoicefour:\"Four\",\nawnser:\"4\"\n},\n{question:\"If you wanted to make sure that the close-parenthesis (the ')' character) matches the open-parenthesis (the '(' character) in a mathematical expression, which data structure could help you?\",\nchoiceOne:\"Queue\",\nchoiceTwo:\"Hash table\",\nchoiceThree:\"Tree\",\nchoicefour:\"Stack\",\nawnser:\"4\"\n},\n{question:\"Which of these is true about a set?\",\nchoiceOne:\"All of these\",\nchoiceTwo:\"The elements are kept in order\",\nchoiceThree:\"There are no duplicates\",\nchoicefour:\"They can only hold numbers\",\nawnser:\"3\"\n},\n{question:\"Modern filesystems, like ReiserFS and XFS, use which structure to organize their data for efficient access?\",\nchoiceOne:\" Lists\",\nchoiceTwo:\"B-Trees\",\nchoiceThree:\"B+Trees\",\nchoicefour:\"Tables\",\nawnser:\"3\"\n},\n{question:\"what is not a programming languages\",\nchoiceOne:\"python\",\nchoiceTwo:\"Groovy\",\nchoiceThree:\"Bertrand\",\nchoicefour:\"Boosque\",\nawnser:\"4\"\n}\n ]\n\n export default  question","import React,{Component} from \"react\"\nlet timer=null\n\nclass CountDown extends Component {\n\n    state={\n        time:3\n    }\n\n    componentDidMount=()=>{\n        setTimeout(()=>{\n            timer=setInterval(()=>{\n      this.setState({\n    time:this.state.time-1\n            },()=>{\n                if(this.state.time===0){\n         clearInterval(timer)\n                }\n            })\n            },1000)\n        },1000) \n    }\n\n    render=()=>{\n       \n        return (\n            <div className={`wraprtttt ${this.props.displayCount?\"active\":\"\"}`}>\n                <div className=\"boxx-ett\">\n                   {this.state.time}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CountDown","import React,{Component} from \"react\"\nclass Leaderboard extends Component {\n    state={\nleaderboard:[]\n    }\n    componentDidMount=()=>{\n        this.setState({\n            leaderboard:this.props.leadBoard\n        })\n    }\n    render(){\n        return (\n            <div className=\"createe-userr\">\n                <div id=\"leaderboard\"> \n       <div id=\"controle\">\n       <div id=\"leave-game\">\n       <i className=\"fas fa-chevron-left\">\n\n       </i></div><div id=\"text-leader\">learderboard</div>\n       </div>\n       </div>\n       <div className=\"table-display\">\n\n       <div className=\"wkrkrkr\">\n       <div className=\"boxf\">Rank</div>\n           <div className=\"boxf\">Name</div>\n           <div className=\"boxf\">Score</div>\n       </div>\n           \n           <div className=\"wraperr-detail\">\n\n           {this.state.leaderboard.map((data,index)=>{\n               return(\n                <div key={index} className=\"edetailrlr\">\n               <div className=\"boxf\">#{index+1}</div>\n           <div className=\"boxf\">{data.name}</div>\n           <div className=\"boxf\">{data.score}</div>\n               </div>\n               )\n           })} \n           </div>\n       </div>\n            </div>\n        )\n    }\n}\n\nexport default Leaderboard","import React,{Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport Chat  from \"../component/chat\"\nimport question  from \"../question\"\nimport {connect} from \"react-redux\"\nimport { BsFillChatFill } from \"react-icons/bs\";\nimport CountDown  from \"../component/coutDown\"\nimport socket from \"../socketconf\";\nimport Leaderboard from \"../component/leaderboard\"\nlet time=null\nlet realTimeLeaderboardState={}\nclass Join extends Component {\n    state={\n        currentUser:0,\n        message:true,\n        game:false,\n        start:false,\n        leaderboard:false,\n        awnser:\"5\",\n        currentCount:0,\n        correctAwnser:\"5\",\n        liveCounter:11,\n        check:false,\n        currentQuestion:{},\n        currentScore:0,\n        begin:false,\n        displayCount:false,\n        leadB:[],\n        chat:false\n    }\nrealTime=()=>{\nsocket.on(\"beginTheGame\",()=>{\nthis.setState({\n    displayCount:true  \n})\nsetTimeout(()=>{\n    this.setState({\n        game:true\n    },()=>{\n        document.querySelector(\"#containerr\").scrollTop = document.querySelector(\"#containerr\").scrollHeight\n        this.setState({\n            displayCount:false\n        },()=>{\n            this.startTheGame()\n            this.setState({\n \n            })\n        })\n    })\n\n},4000)\n})\nsocket.on(\"update-score\",(data)=>{\nif(realTimeLeaderboardState[data.name]){\n    realTimeLeaderboardState[data.name]= Math.max(realTimeLeaderboardState[data.name],data.score)\n}else{\n    realTimeLeaderboardState[data.name]=data.score \n}\n})\n}\n\n buildCounter=(duration)=> {\n        var timer = duration, minutes, seconds;\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n        //display.textContent = minutes + \":\" + seconds;\n        if (--timer < 0) {\n        return \"00:00\"\n        }else{\n            return minutes + \":\" + seconds\n        }\n    }\n    componentWillUnmount=()=>{\n        socket.off(\"beginTheGame\")\n        socket.off(\"update-score\")\n        socket.emit(\"leave-room\",this.props.roomId)\n        this.props.loginAthification({connected:false,room:\"\",username:\"\"})\n\n    }\n    componentDidMount=()=>{\n        if(!this.props.connected){\n            this.props.history.push(\"/\")\n        }else{\n            this.setState({\n                roomId:this.props.roomId ,\n                currentQuestion:question[this.state.currentCount],\n            })\n            this.realTime()\n        }\n           \n        }\n    checkAwnser=()=>{\n        this.setState({\n            check:true,\n            correctAwnser:this.state.currentQuestion.awnser\n        })\n        if(this.state.awnser!==\"5\"){\n            if(this.state.awnser===this.state.correctAwnser){\n                let curentScore= this.state.currentScore\n                curentScore+=10\n                this.setState({\n                  currentScore:curentScore\n                })\n              } \n        }else{\n\n        }\n        socket.emit('new-score',{room:this.props.roomId,name:this.props.username,score:this.state.currentScore})\n       \n      setTimeout(()=>{\n        this.setState({\n            liveCounter:11\n        },()=>{\n  \n            this.moveNext()\n            if(this.state.currentCount+1!==question.length){\n                this.callTheGame()\n            }\n\n        })\n      },5000)\n    }\nshowLeaderBoard=()=>{\nlet currentLeaderBoard=[]\nfor(let key in realTimeLeaderboardState){\n    currentLeaderBoard.push({name:key,score:realTimeLeaderboardState[key]})   \n}\ncurrentLeaderBoard.sort((a,b)=>b.score-a.score)\nthis.setState({\n    leadB:currentLeaderBoard\n},()=>{\n    this.displayLeaderboad()\n})\n}\n\ndisplayLeaderboad=()=>{\n    this.setState({\n        leaderboard:true,\n    },()=>{\n        document.querySelector(\"#containerr\").scrollTop = document.querySelector(\"#containerr\").scrollHeight\n    })\n\n}\n    moveNext=()=>{\n        if(this.state.currentCount+1!==question.length){\n            this.setState({\n                awnser:\"5\",\n                correctAwnser:\"5\",\n                check:false,\n                currentCount:this.state.currentCount+1,\n                currentQuestion:question[this.state.currentCount+1]\n            })\n        }else{\n          this.showLeaderBoard()\n        }\n        \n    }\n    handleClick=(e)=>{\n  this.setState({\n    awnser:e.target.id,\n    correctAwnser:this.state.currentQuestion.awnser\n  })\n    }\n\n    callTheGame=()=>{\n        time=setInterval(()=>{\n            if(this.state.liveCounter===1){\n                clearInterval(time)\n                this.setState({\n                    liveCounter:0\n                },()=>{\n                    this.checkAwnser()\n                })\n            }else{\n                this.setState({\n                    liveCounter:this.state.liveCounter-1\n                })\n            }\n        },1000)\n    }\n\n    openChat=(data)=>{\n        this.setState({\n            chat:data\n        })\n    }\n  startTheGame=()=>{\nthis.callTheGame()\n  }\n    render(){\n        return (\n            <div className=\"createe-user\">\n                 <div id=\"containerr\"> \n                 <CountDown displayCount={this.state.displayCount}/>\n                  <div id=\"createe\"> \n                  <div id=\"back-page\">\n                  <i className=\"fas fa-chevron-left\">\n                  </i></div> \n                    </div>\n                  {this.state.message? <div id=\"message\">\n                    <header id=\"header\">\n                     {/* <p id=\"numer-client\">{this.state.currentUser}</p>*/}\n                     <p id=\"user-game-name\">CS Trivia</p>\n                    </header>\n                    <div id=\"code\">\n                    <p id=\"message-game\">Wait for the host to start the game</p>\n                    <div id=\"box-room\">\n                    <p id=\"h3\">Room Id</p><p id=\"room-id\">{this.state.roomId}</p>\n                    </div>\n                    </div><div id=\"ready-box\"><p id=\"text-redy\">3</p></div>\n                    <div id=\"overlay\"></div>\n                    <div id=\"people-connected\">\n                    <div className=\"closes\"><p className=\"fas fa-times\"></p></div>\n                    <div id=\"test-descrb-people\">Player </div>\n                    <div id=\"title-name-conected\"></div>\n                    <div id=\"list\"><div className=\"list-people\">\n                    <i id=\"ico\" className=\"far fa-user-circle\"></i>\n                    <div id=\"name-connected\"> \n                    <p id=\"name-user-conec\">{this.props.username}</p> \n                    <p id=\"host\"></p>\n                    </div> \n                    </div></div>\n                    </div>\n                    </div>:\"\"}\n                    {this.state.game?<div id=\"game\">\n                    <header id=\"head\">\n                    <p id=\"online-user\">{this.props.username}</p>\n                    <div id=\"point\">\n                    <p id=\"coin\">{this.state.currentScore}</p>\n                    </div>\n                   \n                    </header>\n                    <div id=\"online-game\"> \n                    <div id=\"timeur\">\n                    <p id=\"time\">{this.buildCounter(this.state.liveCounter)}</p>\n                    </div> \n                    <div id=\"question\">\n         <div id=\"imgpp\"></div>\n        <p id=\"curentquest\">{this.state.currentQuestion.question}</p>\n       </div>\n       <ul>      \n       <div id=\"wraper\">\n       <div id=\"one\" className=\"awnser\">   \n       <li onClick={this.handleClick} id=\"1\" className={`awnsers ${this.state.awnser===\"1\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"1\"?\"correct\":\"\":\"\"} ${this.state.check?this.state.awnser===\"1\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`   }>{this.state.currentQuestion.choiceOne}</li>\n       </div>\n       <div id=\"two\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"2\" className={`awnsers ${this.state.awnser===\"2\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"2\"?\"correct\":\"\" :\"\"} ${this.state.check?this.state.awnser===\"2\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`   }>{this.state.currentQuestion.choiceTwo}</li>\n       </div>\n       <div id=\"three\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"3\"  className={`awnsers ${this.state.awnser===\"3\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"3\"?\"correct\":\"\":\"\" }  ${this.state.check?this.state.awnser===\"3\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"} `   }>{this.state.currentQuestion.choiceThree}</li>\n       </div>\n       <div id=\"four\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"4\" className={`awnsers ${this.state.awnser===\"4\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"4\"?\"correct\":\"\":\"\" }     ${this.state.check?this.state.awnser===\"4\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`    }>{this.state.currentQuestion.choicefour}</li>\n       </div>\n       </div>\n       </ul>\n       <div id=\"questionleft\">\n       <p id=\"current-bar\">{this.state.currentCount+1}/{question.length}</p><div style={{width: `${(this.state.currentCount+1)*100/question.length}%`}} id=\"bar\">  \n       </div>\n       </div>\n       </div>\n       </div>:\"\"}\n      {this.state.leaderboard? <Leaderboard leadBoard={this.state.leadB}/>:\"\"}\n      <div className=\"ktnlet\">\n                   <button onClick={()=>{this.openChat(!this.props.open)}} className=\"close-chat\"> <BsFillChatFill/></button>\n                   </div>\n\t\t</div>\n        <Chat openChat={this.openChat} open={this.state.chat}/>\n        </div>\n         \n          \n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n      loginAthification:(data)=>{\n        dispatch({ type:\"JOIN\", data:data})\n      },\n    }\n      }\n      const mapstateToProps=(state)=>{\n        return{\n            connected:state.connected,\n            roomId:state.roomId,\n            username:state.username\n        }\n        }\n        \nexport default connect(mapstateToProps,mapDispatchToProps) (withRouter(Join))","import React,{Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport Chat  from \"../component/chat\"\nimport question  from \"../question\"\nimport {connect} from \"react-redux\"\nimport { BsFillChatFill } from \"react-icons/bs\";\nimport CountDown  from \"../component/coutDown\"\nimport socket from \"../socketconf\";\nimport Leaderboard from \"../component/leaderboard\"\nlet time=null\nlet realTimeLeaderboardState={}\nclass Create extends Component {\n    state={\n        currentUser:0,\n        message:true,\n        game:false,\n        start:false,\n        leaderboard:false,\n        awnser:\"5\",\n        currentCount:0,\n        correctAwnser:\"5\",\n        liveCounter:11,\n        check:false,\n        currentQuestion:{},\n        currentScore:0,\n        begin:false,\n        displayCount:false,\n        leadB:[],\n        chat:false\n    }\nrealTime=()=>{\nsocket.on(\"beginTheGame\",()=>{\nthis.setState({\n    displayCount:true  \n})\nsetTimeout(()=>{\n    this.setState({\n        game:true\n    },()=>{\n        document.querySelector(\"#containerr\").scrollTop = document.querySelector(\"#containerr\").scrollHeight\n        this.setState({\n            displayCount:false\n        },()=>{\n            this.startTheGame()\n            this.setState({\n \n            })\n        })\n    })\n\n},4000)\n})\nsocket.on(\"update-score\",(data)=>{\nif(realTimeLeaderboardState[data.name]){\n    realTimeLeaderboardState[data.name]= Math.max(realTimeLeaderboardState[data.name],data.score)\n}else{\n    realTimeLeaderboardState[data.name]=data.score \n}\n})\n}\n\nplayTheGame=()=>{\n    if(this.state.start===false){\nthis.setState({\n    start:true,\n},()=>{\n    socket.emit(\"start-game\",this.props.roomId)\n})\n    }\n}\n buildCounter=(duration)=> {\n        var timer = duration, minutes, seconds;\n        minutes = parseInt(timer / 60, 10);\n        seconds = parseInt(timer % 60, 10);\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n        //display.textContent = minutes + \":\" + seconds;\n\n        if (--timer < 0) {\n        return \"00:00\"\n        }else{\n            return minutes + \":\" + seconds\n        }\n\n \n    }\n    componentWillUnmount=()=>{\n        socket.off(\"beginTheGame\")\n        socket.off(\"update-score\")\n        socket.emit(\"remove-room\",this.props.roomId)\n        this.props.loginAthification({connected:false,room:\"\",username:\"\"})\n    }\n    componentDidMount=()=>{\n    if(!this.props.connected){\n        this.props.history.push(\"/\")\n    }else{\n        this.setState({\n            roomId:this.props.roomId ,\n            currentQuestion:question[this.state.currentCount],\n        })\n        this.realTime()\n    }\n       \n    }\n    checkAwnser=()=>{\n        this.setState({\n            check:true,\n            correctAwnser:this.state.currentQuestion.awnser\n        })\n        if(this.state.awnser!==\"5\"){\n            if(this.state.awnser===this.state.correctAwnser){\n                let curentScore= this.state.currentScore\n                curentScore+=10\n                this.setState({\n                  currentScore:curentScore\n                })\n              } \n        }else{\n\n        }\n        socket.emit('new-score',{room:this.props.roomId,name:this.props.username,score:this.state.currentScore})\n       \n      setTimeout(()=>{\n        this.setState({\n            liveCounter:11\n        },()=>{\n  \n            this.moveNext()\n            if(this.state.currentCount+1!==question.length){\n                this.callTheGame()\n            }\n\n        })\n      },5000)\n    }\nshowLeaderBoard=()=>{\nlet currentLeaderBoard=[]\nfor(let key in realTimeLeaderboardState){\n    currentLeaderBoard.push({name:key,score:realTimeLeaderboardState[key]})   \n}\ncurrentLeaderBoard.sort((a,b)=>b.score-a.score)\nthis.setState({\n    leadB:currentLeaderBoard\n},()=>{\n    this.displayLeaderboad()\n})\n}\n\ndisplayLeaderboad=()=>{\n    this.setState({\n        leaderboard:true,\n    },()=>{\n        document.querySelector(\"#containerr\").scrollTop = document.querySelector(\"#containerr\").scrollHeight\n    })\n\n}\n    moveNext=()=>{\n        if(this.state.currentCount+1!==question.length){\n            this.setState({\n                awnser:\"5\",\n                correctAwnser:\"5\",\n                check:false,\n                currentCount:this.state.currentCount+1,\n                currentQuestion:question[this.state.currentCount+1]\n            })\n        }else{\n          this.showLeaderBoard()\n        }\n        \n    }\n    handleClick=(e)=>{\n  this.setState({\n    awnser:e.target.id,\n    correctAwnser:this.state.currentQuestion.awnser\n  })\n    }\n\n    callTheGame=()=>{\n        time=setInterval(()=>{\n            if(this.state.liveCounter===1){\n                clearInterval(time)\n                this.setState({\n                    liveCounter:0\n                },()=>{\n                    this.checkAwnser()\n                })\n            }else{\n                this.setState({\n                    liveCounter:this.state.liveCounter-1\n                })\n            }\n        },1000)\n    }\n\n    openChat=(data)=>{\n        this.setState({\n            chat:data\n        })\n    }\n  startTheGame=()=>{\nthis.callTheGame()\n  }\n    render(){\n        return (\n            <div className=\"createe-user\">\n                 <div id=\"containerr\"> \n                 <CountDown displayCount={this.state.displayCount}/>\n                  <div id=\"createe\"> \n                  <div id=\"back-page\">\n                  <i className=\"fas fa-chevron-left\">\n                  </i></div> \n                    </div>\n                  {this.state.message? <div id=\"message\">\n                    <header id=\"header\">\n                     {/* <p id=\"numer-client\">{this.state.currentUser}</p>*/}\n                     <p id=\"user-game-name\">CS Trivia</p>\n                    </header>\n                    <div id=\"code\">\n                    <p id=\"message-game\">Click start when you are ready</p>\n                    <div id=\"box-room\">\n                    <p id=\"h3\">Room Id</p><p id=\"room-id\">{this.state.roomId}</p>\n                   {this.state.start===false? <button onClick={this.playTheGame} className=\"butttin-action\" >Start</button>:\"\"}\n                    </div>\n                    </div><div id=\"ready-box\"><p id=\"text-redy\">3</p></div>\n                    <div id=\"overlay\"></div>\n                    <div id=\"people-connected\">\n                    <div className=\"closes\"><p className=\"fas fa-times\"></p></div>\n                    <div id=\"test-descrb-people\">Player </div>\n                    <div id=\"title-name-conected\"></div>\n                    <div id=\"list\"><div className=\"list-people\">\n                    <i id=\"ico\" className=\"far fa-user-circle\"></i>\n                    <div id=\"name-connected\"> \n                    <p id=\"name-user-conec\">{this.props.username}</p> \n                    <p id=\"host\"></p>\n                    </div> \n                    </div></div>\n                    </div>\n                    </div>:\"\"}\n                    {this.state.game?<div id=\"game\">\n                    <header id=\"head\">\n                    <p id=\"online-user\">{this.props.username}</p>\n                    <div id=\"point\">\n                    <p id=\"coin\">{this.state.currentScore}</p>\n                    </div>\n                   \n                    </header>\n                    <div id=\"online-game\"> \n                    <div id=\"timeur\">\n                    <p id=\"time\">{this.buildCounter(this.state.liveCounter)}</p>\n                    </div> \n                    <div id=\"question\">\n         <div id=\"imgpp\"></div>\n        <p id=\"curentquest\">{this.state.currentQuestion.question}</p>\n       </div>\n       <ul>      \n       <div id=\"wraper\">\n       <div id=\"one\" className=\"awnser\">   \n       <li onClick={this.handleClick} id=\"1\" className={`awnsers ${this.state.awnser===\"1\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"1\"?\"correct\":\"\":\"\"} ${this.state.check?this.state.awnser===\"1\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`   }>{this.state.currentQuestion.choiceOne}</li>\n       </div>\n       <div id=\"two\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"2\" className={`awnsers ${this.state.awnser===\"2\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"2\"?\"correct\":\"\" :\"\"} ${this.state.check?this.state.awnser===\"2\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`   }>{this.state.currentQuestion.choiceTwo}</li>\n       </div>\n       <div id=\"three\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"3\"  className={`awnsers ${this.state.awnser===\"3\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"3\"?\"correct\":\"\":\"\" }  ${this.state.check?this.state.awnser===\"3\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"} `   }>{this.state.currentQuestion.choiceThree}</li>\n       </div>\n       <div id=\"four\" className=\"awnser\">\n       <li onClick={this.handleClick} id=\"4\" className={`awnsers ${this.state.awnser===\"4\"?\"selected\":\"\" }   ${this.state.check?this.state.correctAwnser===\"4\"?\"correct\":\"\":\"\" }     ${this.state.check?this.state.awnser===\"4\" && this.state.awnser!==this.state.correctAwnser?\"incorect\":\"\":\"\"}`    }>{this.state.currentQuestion.choicefour}</li>\n       </div>\n       </div>\n       </ul>\n       <div id=\"questionleft\">\n       <p id=\"current-bar\">{this.state.currentCount+1}/{question.length}</p><div style={{width: `${(this.state.currentCount+1)*100/question.length}%`}} id=\"bar\">  \n       </div>\n       </div>\n       </div>\n       </div>:\"\"}\n      {this.state.leaderboard? <Leaderboard leadBoard={this.state.leadB}/>:\"\"}\n      <div className=\"ktnlet\">\n                   <button onClick={()=>{this.openChat(!this.props.open)}} className=\"close-chat\"> <BsFillChatFill/></button>\n                   </div>\n\t\t</div>\n        <Chat openChat={this.openChat} open={this.state.chat}/>\n        </div>\n         \n          \n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n      loginAthification:(data)=>{\n        dispatch({ type:\"JOIN\", data:data})\n      },\n      \n    }\n      }\n      const mapstateToProps=(state)=>{\n        return{\n            connected:state.connected,\n            roomId:state.roomId,\n            username:state.username\n        }\n        }\n        \nexport default connect(mapstateToProps,mapDispatchToProps) (withRouter(Create))","import Home from \"./page/home\"\nimport Join from \"./page/join\"\nimport Create from \"./page/create\"\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\"\nfunction App() {\n  return (\n    <div color-scheme=\"dark\" className=\"App\">\n    <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/\">\n    <Home/>\n    </Route>\n    <Route  exact path=\"/creategame\">\n    <Create/>\n    </Route>\n    <Route  exact path=\"/joingame\">\n    <Join/>\n    </Route>\n    </Switch>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const  initState={\nusername:\"\",\n  connected:false,\n  roomId:null,\n  score:0,\n}\nconst rootReducer =(state = initState,action)=>{\n \n    if(action.type===\"JOIN\") {\n        return{\n            ...state, \n            connected:action.data.connected,\n            roomId:action.data.room,\n            username:action.data.username,\n        }\n    }\n   \n return state\n}\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\"\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from \"./reducers/rootReducer\"\nconst store = createStore(rootReducer)\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n   <App />\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}