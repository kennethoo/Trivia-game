{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/react-project/lanch/src/component/connect.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport socket from \"../socketconf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConnectCom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      click: false,\n      username: \"\",\n      usernameOneState: false,\n      usernameTwo: \"\",\n      usernameTwoState: false,\n      roomId: \"\",\n      roomIdState: false,\n      messageRoom: \"\"\n    };\n\n    this.createARoom = () => {\n      if (this.state.username.length > 2) {\n        this.setState({\n          usernameOneState: false\n        });\n        this.beginConnection();\n      } else {\n        this.setState({\n          usernameOneState: true\n        });\n      }\n    };\n\n    this.beginConnection = () => {\n      let username = this.state.username;\n      socket.auth = {\n        username\n      };\n      socket.connect();\n      this.reatimeConetion();\n      socket.emit(\"create-game\", this.state.username);\n    };\n\n    this.joinGame = () => {\n      if (this.state.username.length > 2) {\n        this.setState({\n          usernameTwoState: false\n        });\n      } else {\n        this.setState({\n          usernameTwoState: true\n        });\n      }\n\n      if (this.state.roomId.length > 0) {\n        this.setState({\n          roomIdState: false,\n          messageRoom: \"\"\n        });\n      } else {\n        this.setState({\n          roomIdState: true,\n          messageRoom: \"Room is empty\"\n        });\n      }\n\n      if (this.state.username.length > 2 && this.state.roomId.length > 0) {\n        this.joinRoom();\n      }\n    };\n\n    this.joinRoom = () => {\n      if (this.state.click === false) {\n        let username = this.state.username;\n        socket.auth = {\n          username\n        };\n        socket.connect();\n        this.reatimeConetion();\n        this.setState({\n          click: true\n        });\n      }\n\n      socket.emit(\"join-game\", this.state.roomId);\n    };\n\n    this.reatimeConetion = () => {\n      socket.on(\"connected-succed-join\", room => {\n        this.props.loginAthification({\n          connected: true,\n          room: room,\n          username: this.state.username\n        });\n        this.props.history.push(\"/joingame\");\n      });\n      socket.on(\"connected-succed\", room => {\n        this.props.loginAthification({\n          connected: true,\n          room: room,\n          username: this.state.username\n        });\n        this.props.history.push(\"/creategame\");\n      });\n      socket.on(\"join-connect-error\", () => {\n        this.setState({\n          roomIdState: true,\n          messageRoom: \"Room does not exist\"\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      if (e.target.name === \"usernameOne\") {\n        this.setState({\n          username: e.target.value.trim()\n        });\n      }\n\n      if (e.target.name === \"roomId\") {\n        this.setState({\n          roomId: e.target.value.trim()\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      socket.off(\"connected-succed\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-prsent-game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titk\",\n        children: \"CS Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-box-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            className: \"username-profile\",\n            type: \"text\",\n            name: \"usernameOne\",\n            placeholder: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), this.state.usernameOneState ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-password\",\n          children: \"Username minimum length is 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 44\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"butttin-action\",\n          onClick: this.createARoom,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hold--tr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-a-party\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-box-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            className: \"username-profile\",\n            type: \"text\",\n            name: \"usernameOne\",\n            placeholder: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), this.state.usernameTwoState ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-password\",\n          children: \"Username minimum length is 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 44\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-box-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Join a party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChange,\n            className: \"username-profile\",\n            type: \"text\",\n            name: \"roomId\",\n            placeholder: \"#code..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 2\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), this.state.roomIdState ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-password\",\n          children: this.state.messageRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 39\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.joinGame,\n        className: \"butttin-action\",\n        children: \"JOin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginAthification: data => {\n      dispatch({\n        type: \"JOIN\",\n        data: data\n      });\n    }\n  };\n};\n\nconst mapstateToProps = state => {\n  return {\n    connected: state.connected\n  };\n};\n\nexport default connect(mapstateToProps, mapDispatchToProps)(withRouter(ConnectCom));","map":{"version":3,"sources":["/Users/kenneth/Desktop/react-project/lanch/src/component/connect.js"],"names":["React","Component","withRouter","connect","socket","ConnectCom","state","click","username","usernameOneState","usernameTwo","usernameTwoState","roomId","roomIdState","messageRoom","createARoom","length","setState","beginConnection","auth","reatimeConetion","emit","joinGame","joinRoom","on","room","props","loginAthification","connected","history","push","handleChange","e","target","name","value","trim","componentDidMount","off","render","mapDispatchToProps","dispatch","data","type","mapstateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport socket from \"../socketconf\";\nclass ConnectCom extends Component{\n    state={\n        click:false,\nusername:\"\",\nusernameOneState:false,\nusernameTwo:\"\",\nusernameTwoState:false,\nroomId:\"\",\nroomIdState:false,\nmessageRoom:\"\"\n    }\n\n    createARoom=()=>{\n        if(this.state.username.length>2){\n            this.setState({\n                usernameOneState:false \n            })\n            this.beginConnection()\n        }else{\n            this.setState({\n                usernameOneState:true \n            })\n        }\n    }\n    beginConnection=()=>{\n        let username=this.state.username\n        socket.auth = {username};\n        socket.connect()\n        this.reatimeConetion()\n        socket.emit(\"create-game\",this.state.username)\n    }\njoinGame=()=>{\nif(this.state.username.length>2){\n    this.setState({\n        usernameTwoState:false \n    })\n}else{\n    this.setState({\n        usernameTwoState:true \n    }) \n}\n\nif(this.state.roomId.length>0){\n    this.setState({\n        roomIdState:false ,\n        messageRoom:\"\"\n    })\n}else{\n    this.setState({\n        roomIdState:true ,\n        messageRoom:\"Room is empty\"\n    })\n}\n\nif(this.state.username.length>2&& this.state.roomId.length>0){\n    this.joinRoom()\n}\n}\njoinRoom=()=>{\n    if(this.state.click===false){\n        let username=this.state.username\n        socket.auth = {username};\n        socket.connect()\n        this.reatimeConetion()\n        this.setState({\n            click:true\n        })\n    }\n    socket.emit(\"join-game\",this.state.roomId)\n}\n\n\n    reatimeConetion=()=>{\n        socket.on(\"connected-succed-join\",((room)=>{\n            this.props.loginAthification({ connected:true,room:room,username:this.state.username})\n            this.props.history.push(\"/joingame\")\n        }))\n        socket.on(\"connected-succed\",((room)=>{\n            this.props.loginAthification({connected:true,room:room,username:this.state.username})\n            this.props.history.push(\"/creategame\")\n        }))\n        socket.on(\"join-connect-error\",()=>{\n            this.setState({\n                roomIdState:true,\n                messageRoom:\"Room does not exist\"\n            })\n        })\n    }\n    handleChange=(e)=>{\nif(e.target.name===\"usernameOne\"){\nthis.setState({\n    username:e.target.value.trim()\n})\n}\nif(e.target.name===\"roomId\"){\n    this.setState({\n        roomId:e.target.value.trim()\n    })\n    }\n    }\n \n    componentDidMount=()=>{\n        socket.off(\"connected-succed\")\n    }\n    render(){\n        return(\n            <div className=\"box-prsent-game\">\n                <div className=\"titk\">\n                 CS Trivia\n                </div>\n                <div className=\"create-game\">\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Username</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"usernameOne\" placeholder=\"John Doe\"  />\n\t\t\t  </div>\n              {this.state.usernameOneState?<div  className=\"message-password\">Username minimum length is 3</div>:\"\"}\n             \n                   <button className=\"butttin-action\" onClick={this.createARoom}>Create</button>\n                </div>\n                <div className=\"hold--tr\">\n                    <div className=\"bar\"></div>\n                    <p>Or</p>\n                    <div className=\"bar\"></div>\n                </div>\n                <div className=\"join-a-party\">\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Username</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"usernameOne\" placeholder=\"John Doe\"  />\n\t\t\t  </div>\n              {this.state.usernameTwoState?<div  className=\"message-password\">Username minimum length is 3</div>:\"\"}\n                <div className=\"edit-box-profile\">\n\t\t\t   <label htmlFor=\"username\">Join a party</label>\n\t<input  onChange={this.handleChange}  className=\"username-profile\"  type=\"text\" name=\"roomId\" placeholder=\"#code..\"  />\n\t\t\t  </div>\n              {this.state.roomIdState?<div  className=\"message-password\">{this.state.messageRoom}</div>:\"\"}\n                </div>\n                <button onClick={this.joinGame} className=\"butttin-action\" >JOin</button>\n            </div>\n        )\n    }\n}   \n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n      loginAthification:(data)=>{\n        dispatch({ type:\"JOIN\", data:data})\n      },\n      \n    }\n      }\n      const mapstateToProps=(state)=>{\n        return{\n            connected:state.connected\n        }\n        }\n        \nexport default connect(mapstateToProps,mapDispatchToProps) (withRouter(ConnectCom))"]},"metadata":{},"sourceType":"module"}