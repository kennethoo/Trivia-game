{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/react-project/lanch/src/page/contact.js\";\nimport React, { Component } from \"react\";\nimport Fouter from \"./fouter\";\nimport Nav from \"../component/nav\";\nimport Editable from \"../component/editable\";\nimport socket from \"../socketconf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mode: false,\n      nav: false,\n      email: \"\",\n      fullName: \"\",\n      Subject: \"\",\n      content: \"\",\n      loading: false,\n      messageone: \"\",\n      messagetwo: \"\",\n      messagethree: \"\",\n      messagefour: \"\",\n      succes: false\n    };\n\n    this.handleChange = event => {\n      if (event.target.name == \"fullName\") {\n        this.setState({\n          fullName: event.target.value\n        });\n      }\n\n      if (event.target.name == \"Email\") {\n        this.setState({\n          email: event.target.value\n        });\n      }\n\n      if (event.target.name == \"Subject\") {\n        this.setState({\n          Subject: event.target.value\n        });\n      }\n    };\n\n    this.handleBio = event => {\n      this.setState({\n        content: event.target.textContent\n      });\n    };\n\n    this.switchToggle = () => {\n      this.setState({\n        mode: !this.state.mode\n      });\n      localStorage.setItem('mode', !this.state.mode);\n    };\n\n    this.openNav = data => {\n      this.setState({\n        nav: data\n      });\n    };\n\n    this.reatime = () => {\n      socket.on(\"email-sent\", data => {\n        if (data.succes == true) {\n          this.setState({\n            succes: true\n          });\n        } else {\n          this.setState({\n            succes: false\n          });\n        }\n      });\n    };\n\n    this.sendemail = () => {\n      if (this.state.fullName.length > 0) {\n        this.setState({\n          messageone: \"\"\n        });\n      } else {\n        this.setState({\n          messageone: \"Field can not be empty \"\n        });\n      }\n\n      if (this.state.email.length > 0) {\n        this.setState({\n          messagetwo: \"\"\n        });\n      } else {\n        this.setState({\n          messagetwo: \"Field can not be empty \"\n        });\n      }\n\n      if (this.state.Subject.length > 0) {\n        this.setState({\n          messagethree: \"\"\n        });\n      } else {\n        this.setState({\n          messagethree: \"Field can not be empty \"\n        });\n      }\n\n      if (this.state.content.length > 0) {\n        this.setState({\n          messagefour: \"\"\n        });\n      } else {\n        this.setState({\n          messagefour: \"Field can not be empty \"\n        });\n      }\n\n      if (this.state.email.length > 0 && this.state.fullName.length > 0 && this.state.content.length > 0 && this.state.Subject.length > 0) {\n        let option = {\n          email: this.state.email,\n          fullName: this.state.fullName,\n          subject: this.state.Subject,\n          content: this.state.content\n        };\n        this.setState({\n          loading: true\n        });\n        socket.emit(\"new-email\", option);\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.reatime();\n      const mode = localStorage.getItem('mode') === 'true';\n      this.setState({\n        mode: mode\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `contact-page ${this.state.mode == true ? \"active\" : \"\"}  `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/kenneth/Desktop/react-project/lanch/src/page/contact.js"],"names":["React","Component","Fouter","Nav","Editable","socket","Contact","state","mode","nav","email","fullName","Subject","content","loading","messageone","messagetwo","messagethree","messagefour","succes","handleChange","event","target","name","setState","value","handleBio","textContent","switchToggle","localStorage","setItem","openNav","data","reatime","on","sendemail","length","option","subject","emit","componentDidMount","getItem","render"],"mappings":"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","sourcesContent":["\nimport React,{Component} from \"react\"\nimport Fouter from \"./fouter\"\nimport Nav from \"../component/nav\"\nimport Editable from \"../component/editable\"\nimport socket from \"../socketconf\"\n\n\nclass Contact extends Component{\n    state={\n        mode:false,\n        nav:false,\n        email:\"\",\n        fullName:\"\",\n        Subject:\"\",\n        content:\"\",\n        loading:false,\n        messageone:\"\",\n        messagetwo:\"\",\n        messagethree:\"\",\n        messagefour:\"\",\n        succes:false\n    }\n\n\n    handleChange=(event)=>{\n\n      if(event.target.name==\"fullName\"){\n        this.setState({\n          fullName:event.target.value\n        })\n      }\n      if(event.target.name==\"Email\"){\n        this.setState({\n          email:event.target.value\n        })\n      }\n      if(event.target.name==\"Subject\"){\n        this.setState({\n          Subject:event.target.value\n        })\n\n      }\n    \n    }\n\n    handleBio=(event)=>{\n      this.setState({\n        content:event.target.textContent\n      }) \n    }\n    switchToggle=()=>{\n        this.setState({\n          mode:!this.state.mode\n        })\n        localStorage.setItem('mode', !this.state.mode);\n      }\n      openNav=(data)=>{\n        this.setState({\n          nav:data\n        })\n      }\n\n\n\n      reatime=()=>{\n        socket.on(\"email-sent\",data=>{\n  \n          if(data.succes==true){\n\n  this.setState({\n  \n    succes:true\n  })\n          }else{\n  \n            this.setState({\n              succes:false\n            })\n          }\n        })\n      }\n      sendemail=()=>{\n        if(this.state.fullName.length>0){\n          this.setState({\n            messageone:\"\"\n          })\n        \n        }else{\n          this.setState({\n            messageone:\"Field can not be empty \"\n          })\n        }\n\n        if(this.state.email.length>0){\n          this.setState({\n            messagetwo:\"\"\n          })\n        }else{\n          this.setState({\n            messagetwo:\"Field can not be empty \"\n          })\n        }\n\n        if(this.state.Subject.length>0){\n          this.setState({\n            messagethree:\"\"\n          })\n        }else{\n          this.setState({\n            messagethree:\"Field can not be empty \"\n          })\n        }\n\n\n        if(this.state.content.length>0){\n          this.setState({\n            messagefour:\"\"\n          })\n        \n        }else{\n          this.setState({\n            messagefour:\"Field can not be empty \"\n          })\n        }\n\n\n        if(this.state.email.length>0 &&this.state.fullName.length>0&& this.state.content.length>0 &&this.state.Subject.length>0 ){\nlet option ={\n  email:this.state.email,\n  fullName:this.state.fullName,\n  subject:this.state.Subject,\n  content:this.state.content\n}\nthis.setState({\n  loading:true\n})\nsocket.emit(\"new-email\",option)\n        }\n      \n       \n      }\n    componentDidMount=()=>{\n      this.reatime()\n        const mode = localStorage.getItem('mode') === 'true';\n      this.setState({mode:mode});\n    \n      }\n    render(){\n        return(\n            <div className={`contact-page ${this.state.mode==true?\"active\":\"\"}  `}>\n \n            </div>\n            \n        )\n    }\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}